// +build !testmock

// Code generated by mockery v2.43.1. DO NOT EDIT.

package mocks

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// JiraIssueHandler is an autogenerated mock type for the JiraIssueHandler type
type JiraIssueHandler struct {
	mock.Mock
}

// CreateJiraTicket provides a mock function with given fields: w, r
func (_m *JiraIssueHandler) CreateJiraTicket(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// GetAllJiraTickets provides a mock function with given fields: w, r
func (_m *JiraIssueHandler) GetAllJiraTickets(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// GetSpecificJiraTicket provides a mock function with given fields: w, r
func (_m *JiraIssueHandler) GetSpecificJiraTicket(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// NewJiraIssueHandler creates a new instance of JiraIssueHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewJiraIssueHandler(t interface {
	mock.TestingT
	Cleanup(func())
}) *JiraIssueHandler {
	mock := &JiraIssueHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
